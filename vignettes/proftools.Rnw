%%\VignetteIndexEntry{Using proftools}
\documentclass[nojss]{jss}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% declarations for jss.cls %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% almost as usual
\author{Luke Tierney\\University of Iowa \And 
        Riad Jarjour\\University of Iowa}
\title{Examining R Profiling Data: The \pkg{proftools} Package}

%% for pretty printing and a nice hypersummary also set:
\Plainauthor{Luke Tierney, Riad Jarjour} %% comma-separated
\Plaintitle{An Example of using the proftools Package} %% without formatting
%$ \Shorttitle{\pkg{foo}: A Capitalized Title} %% a short title (if necessary)

%% an abstract and keywords
\Abstract{
  This note introduces the \pkg{proftools} package for examining R
  profiling data and illustrates its use with a small example.
}
\Keywords{\pkg{proftools}, profiling, R, Rprof, profr}
\Plainkeywords{proftools, profiling, R, Rprof, profr} %% without formatting
%% at least one keyword must be supplied

%% publication information
%% NOTE: Typically, this can be left commented and will be filled out by the technical editor
%% \Volume{50}
%% \Issue{9}
%% \Month{June}
%% \Year{2012}
%% \Submitdate{2012-06-04}
%% \Acceptdate{2012-06-04}

%% The address of (at least) one author should be given
%% in the following format:
\Address{
  Luke Tierney\\
  Department of Statistics and Actuarial Science\\
  Faculty of Statistics\\
  University of Iowa\\
  Iowa City, USA\\
  E-mail: \email{luke-tierney@uiowa.edu}\\
  URL: \url{http://homepage.stat.uiowa.edu/~luke/}
  
  Riad Jarjour\\
  Department of Statistics and Actuarial Science\\
  Faculty of Statistics\\
  University of Iowa\\
  Iowa City, USA\\
  E-mail: \email{riad-jarjour@uiowa.edu}
}
%% It is also possible to add a telephone and fax number
%% before the e-mail in the following format:
%% Telephone: +43/512/507-7103
%% Fax: +43/512/507-2851

%% for those who use Sweave please include the following line (with % symbols):
%% need no \usepackage{Sweave.sty}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}

%% include your article here, just as usual
%% Note that you should use the \pkg{}, \proglang{} and <<>>=} commands.

\section{A simple example}
We illustrate some uses of the package with a simple example. We 
begin by reading the profile data from a stack file.
<<echo=false,results=hide>>=
library("proftools")
@ %%
<<>>=
pd <- readProfileData(system.file("samples", "glmEx.out", package="proftools"))
@ %%

\section{Summary Functions}
We can now use the \code{pd} object to obtain summaries by function:
<<>>=
head(funSummary(pd, value = "pct"))
@ %%
Data can also be summarized by call:
<<>>=
head(callSummary(pd, value = "time")) 
@ 

Hot path information can be obtained by
<<>>=
hotPaths(pd, value = "pct", maxdepth = 10)
@ %%
We could have alternatively used \code{"time"} or \code{"hits"} for
the value argument.

Other summaries are \code{pathSummary} and \code{srcSummary}.
%% **** filtering

\section{Filtering Profile Data}
In many cases it can be useful to focus on a particular subset of the
\code{pd} object. We can filter the \code{pd} object by selecting or
dropping certain functions. For example,
<<>>=
filteredPD <- filterProfileData(pd, select = "glm.fit", focus = TRUE)
@ %%
Now we can use the filtered object in our calls to summary functions
or plots, for example

<<>>=
hotPaths(filteredPD, maxdepth = 10) 
@

\section{Call Graphs}
A printed version of the call graph, similar to the call graph
produced by \code{gprof}, can be obtained by running (output has been
omitted)
<<eval=FALSE>>=
printProfileCallGraph(pd)
@ %%
Alternatively, if you have the packages graph and Rgraphviz from
Bioconductor installed, then you can view the call graph within R
using

<<fig=true>>=
plotProfileCallGraph(pd, style = google.style)
@ %%
\\
This plot isn't very readable; but focusing on a particular
section will make more useful. For example,
<<fig=true>>=
plotProfileCallGraph(
    filterProfileData(
        filterProfileData(pd, select="glm", focus=TRUE),maxdepth=10 ),
    style = google.style)
@ %%

\section{Other Visualizations}
\subsection{Flame Graphs}
We can also plot a hot paths flame graph with
<<fig=true>>=
flameGraph(pd, order = "hot")
@
\\
A flame graph of the filtered data is produced by
<<fig=true>>=
flameGraph(filteredPD)
@ %%
\\
Furthermore, an svg file of the graph can be outputted by using the
svg argument:
<<eval=FALSE>>=
flameGraph(pd, svg = "graph.svg", order = "hot")
@ 

Alternative \code{order} values are \code{"time"} \code{"alpha"}.
Specifying \code{"time"} presents the calls in the order in which they
occurred.
<<fig=TRUE>>=
flameGraph(pd, order = "time")
@ 

\subsection{Callee Tree Maps}
A callee tree map can be obtained with
<<fig=true>>=
calleeTreeMap(pd)
@
\\

\end{document}
